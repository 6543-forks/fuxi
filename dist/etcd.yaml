apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: compass
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: compass # has to match .spec.template.metadata.labels
  serviceName: "compass"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: compass # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: etcd
        image: 'quay.io/coreos/etcd:latest'
        args:
          - etcd
          - '-name'
          - etcd1
          - '-advertise-client-urls=http://0.0.0.0:2379'
          - '-listen-client-urls=http://0.0.0.0:2379'
          - '-data-dir=/var/lib/etcd'
          - '-initial-cluster-state'
          - new
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: data
          mountPath: /var/lib/etcd

      - name: gateway
        args: ["--registry", "etcd", "--registry_address", "127.0.0.1:2379", "api", "--handler=http"]
        image: yametech/gateway:v0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080

      - name: workload
        args: ["--registry", "etcd", "--registry_address", "127.0.0.1:2379"]
        image: yametech/workload:v0.1.0
        imagePullPolicy: IfNotPresent

      - name: base
        args: ["--registry", "etcd", "--registry_address", "127.0.0.1:2379"]
        image: yametech/base:v0.1.0
        imagePullPolicy: IfNotPresent

      - name: compass-web
        image: yametech/compass:v0.1.0
        ports:
        - containerPort: 8080
        imagePullPolicy: IfNotPresent

  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        volume.alpha.kubernetes.io/storage-class: default      
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: compass
  name: compass
  namespace: kube-system
spec:
  ports:
  - name: "2379"
    port: 2379
    targetPort: 2379
  - name: "8080"
    port: 8080
    targetPort: 8080
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    app: compass